{"version":3,"file":"static/webpack/static/development/pages/_app.js.7bfed83ddd6076d46ce6.hot-update.js","sources":["webpack:///./components/CartItem.js","webpack:///./components/RemoveFromCart.js"],"sourcesContent":["import React from 'react';\nimport styled from 'styled-components';\nimport PropTypes from 'prop-types';\nimport formatMoney from '../lib/formatMoney';\nimport RemoveFromCart from './RemoveFromCart';\n\nconst CartItemStyles = styled.li`\n  padding: 1rem 0;\n  border-bottom: 1px solid ${props => props.theme.lightgrey};\n  display: grid;\n  align-items: center;\n  grid-template-columns: auto 1fr auto;\n  img {\n    margin-right: 10px;\n  }\n  h3,\n  p {\n    margin: 0;\n  }\n`;\n\nconst CartItem = ({ cartItem }) => {\n  // first check if that item exists\n  if (!cartItem.item)\n    return (\n      <CartItemStyles>\n        <p>This Item has been removed</p>\n       {/*  <RemoveFromCart id={cartItem.id} /> */}\n      </CartItemStyles>\n    );\n  return (\n    <CartItemStyles>\n      <img width=\"100\" src={cartItem.item.image} alt={cartItem.item.title} />\n      <div className=\"cart-item-details\">\n        <h3>{cartItem.item.title}</h3>\n        <p>\n          {formatMoney(cartItem.item.price * cartItem.quantity)}\n          {' - '}\n          <em>\n            {cartItem.quantity} &times; {formatMoney(cartItem.item.price)} each\n          </em>\n        </p>\n      </div>\n      <RemoveFromCart id={cartItem.id} />\n    </CartItemStyles>\n  );\n};\n\nCartItem.propTypes = {\n  cartItem: PropTypes.object.isRequired,\n};\n\nexport default CartItem;\n","import React from 'react';\nimport { Mutation } from 'react-apollo';\nimport styled from 'styled-components';\nimport PropTypes from 'prop-types';\nimport gql from 'graphql-tag';\nimport { CURRENT_USER_QUERY } from './User';\n\nconst REMOVE_FROM_CART_MUTATION = gql`\n  mutation removeFromCart($id: ID!) {\n    removeFromCart(id: $id) {\n      id\n    }\n  }\n`;\n\nconst BigButton = styled.button`\n  font-size: 3rem;\n  background: none;\n  border: 0;\n  &:hover {\n    color: ${props => props.theme.red};\n    cursor: pointer;\n  }\n`;\n\nclass RemoveFromCart extends React.Component {\n  static propTypes = {\n    id: PropTypes.string.isRequired,\n  };\n  // This gets called as soon as we get a response back from the server after a mutation has been performed\n  update = (cache, payload) => {\n    // 1. first read the cache\n    const data = cache.readQuery({ query: CURRENT_USER_QUERY });\n    // 2. remove that item from the cart\n    const cartItemId = payload.data.removeFromCart.id;\n    data.me.cart = data.me.cart.filter(cartItem => cartItem.id !== cartItemId);\n    // 3. write it back to the cache\n    cache.writeQuery({ query: CURRENT_USER_QUERY, data });\n  };\n  render() {\n    return (\n      <Mutation\n        mutation={REMOVE_FROM_CART_MUTATION}\n        variables={{ id: this.props.id }}\n        update={this.update}\n        optimisticResponse={{\n          __typename: 'Mutation',\n          removeFromCart: {\n            __typename: 'CartItem',\n            id: this.props.id,\n          },\n        }}\n      >\n        {(removeFromCart, { loading, error }) => (\n          <BigButton\n            disabled={loading}\n            onClick={() => {\n              removeFromCart().catch(err => alert(err.message));\n            }}\n            title=\"Delete Item\"\n          >\n            &times;\n          </BigButton>\n        )}\n      </Mutation>\n    );\n  }\n}\n\nexport default RemoveFromCart;\nexport { REMOVE_FROM_CART_MUTATION };\n"],"mappings":";;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AAEA;AAAA;AACA;AAYA;AAAA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AADA;AAIA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACpDA;AACA;AACA;AACA;AACA;AACA;AAEA;AAQA;AAAA;AAAA;AAAA;AAKA;AAAA;AACA;AAIA;;;;;;;;;;;;;;;;;;AAKA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;;;;;;AAAA;AACA;AAEA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AAFA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAYA;AAAA;AAAA;AAEA;AACA;AACA;AAAA;AAAA;AACA;AACA;AALA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAaA;;;;AAzCA;AACA;AADA;AAEA;AADA;AACA;AA0CA;;;;;A","sourceRoot":""}