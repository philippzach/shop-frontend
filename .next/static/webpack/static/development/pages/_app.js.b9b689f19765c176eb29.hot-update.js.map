{"version":3,"file":"static/webpack/static/development/pages/_app.js.b9b689f19765c176eb29.hot-update.js","sources":["webpack:///./lib/withData.js"],"sourcesContent":["import withApollo from 'next-with-apollo';\nimport ApolloClient from 'apollo-boost';\nimport { endpoint } from '../config';\nimport { LOCAL_STATE_QUERY } from '../components/Cart';\n\nfunction createClient({ headers }) {\n  return new ApolloClient({\n    uri: process.env.NODE_ENV === 'development' ? endpoint : endpoint,\n    request: operation => {\n      operation.setContext({\n        fetchOptions: {\n          credentials: 'include',\n        },\n        headers,\n      });\n    },\n    //local Data\n    clientState: {\n      resolvers:{\n        Mutation: {\n          toggleCart(_, variables, {cache}) {\n            //read the cartOpen value from the cache\n            const { cartOpen } = cache.readQuery({query: LOCAL_STATE_QUERY});\n          //write the cart State to the opposite of inital value\n            const data = {\n              data: { cartOpen: !cartOpen}\n            };\n            cache.writeData(data);\n            return data\n        }\n        }\n      },\n      defaults: {\n        cartOpen: false\n      }\n    }\n  });\n}\n\nexport default withApollo(createClient);\n"],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AAGA;AAJA;AAMA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AADA;AAEA;AAAA;AAFA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AADA;AAGA;AACA;AACA;AAVA;AADA;AAcA;AACA;AADA;AAfA;AAXA;AA+BA;AACA;AACA;;;;A","sourceRoot":""}